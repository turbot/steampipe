linters:
  disable-all: true
  enable:
    # default rules
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    # other rules
    - asasalint
    - depguard
    - asciicheck
    - bidichk
    - durationcheck
    - forbidigo
    - gocritic
    - gocheckcompilerdirectives
    - gosec
    - makezero
    - nilerr
    - nolintlint
    - reassign
    - sqlclosecheck
    - unconvert

linters-settings:
  nolintlint:
    require-explanation: true
    require-specific: true

  forbidigo:
    forbid:
      - "^(fmt\\.Print(|f|ln)|print|println)$"
      - "^(fmt\\.Fprint(|f|ln)|print|println)$"
      - '^zap\.Error$'
      - '^grpc\.(Header|Trailer)$' # easy to misuse and create a data race

  gocritic:
    disabled-checks:
      - ifElseChain       # style
      - singleCaseSwitch  # style & it's actually not a bad idea to use single case switch in some cases
      - assignOp          # style
      - commentFormatting # style

  depguard:
    rules:
      # Name of a rule.
      main:
        # List of file globs that will match this list of settings to compare against.
        # Default: $all
        # files:
        #   - "!**/*_a _file.go"
        # List of allowed packages.
        # allow:
        #   - $gostd
        #   - github.com/OpenPeeDeeP
        # Packages that are not allowed where the value is a suggestion.
        deny:
          - pkg: "go.uber.org/zap"
            desc: do not use Uber zap directly, use the fplog package instead
          - pkg: "github.com/pkg/errors"
            desc: Should be replaced by standard lib errors package

run:
  timeout: 5m

issues:
  exclude-dirs:
    - "tests/acceptance"
