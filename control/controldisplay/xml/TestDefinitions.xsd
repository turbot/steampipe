<?xml version="1.0" encoding="utf-8"?>
<xs:schema elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>This is document is descriptive, rather than a guarantee of future decisions.</xs:documentation>
  </xs:annotation>

  <!-- NUnit.Framework.Internal.Test.PopulateTestNode -->
  <xs:group name="TestBaseElementGroup">
    <xs:sequence>
      <!-- NUnit.Framework.Internal.PropertyBag.AddToXml -->
      <xs:element name="properties" minOccurs="0">
        <xs:complexType>
          <xs:sequence maxOccurs="unbounded">
            <xs:element name="property">
              <xs:complexType>
                <xs:attribute name="name" type="xs:string" use="required" />
                <xs:attribute name="value" type="xs:string" use="required" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="TestBaseAttributeGroup">
    <xs:attribute name="id" type="xs:string" use="required" />
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="fullname" type="xs:string" use="required" />
    <xs:attribute name="methodname" type="xs:string" />
    <xs:attribute name="classname" type="xs:string" />
    <xs:attribute name="runstate" use="required" >
      <xs:simpleType>
        <!-- NUnit.Framework.Interfaces.RunState -->
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotRunnable" />
          <xs:enumeration value="Runnable" />
          <xs:enumeration value="Explicit" />
          <xs:enumeration value="Skipped" />
          <xs:enumeration value="Ignored" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>

  <!-- NUnit.Framework.Internal.TestMethod.AddToXml -->
  <xs:complexType name="TestCaseElementType">
    <xs:group ref="TestBaseElementGroup" />
    <xs:attributeGroup ref="TestCaseAttributeGroup" />
  </xs:complexType>
  <xs:attributeGroup name="TestCaseAttributeGroup">
    <xs:attributeGroup ref="TestBaseAttributeGroup" />
    <xs:attribute name="seed" type="xs:string" use="required" />
  </xs:attributeGroup> 

  <!-- NUnit.Framework.Internal.TestSuite.AddToXml -->
  <xs:complexType name="TestSuiteElementType">
    <xs:sequence>
      <!-- NUnit.Framework.Api.FrameworkController.InsertEnvironmentElement -->
      <xs:element name="environment" minOccurs="0">
        <xs:complexType>
          <xs:attribute name="framework-version" type="xs:string" use="required" />
          <xs:attribute name="clr-version" type="xs:string" use="required" />
          <xs:attribute name="os-version" type="xs:string" use="required" />
          <xs:attribute name="platform" type="xs:string" />
          <xs:attribute name="cwd" type="xs:string" use="required" />
          <xs:attribute name="machine-name" type="xs:string" />
          <xs:attribute name="user" type="xs:string" />
          <xs:attribute name="user-domain" type="xs:string" />
          <xs:attribute name="culture" type="xs:string" use="required" />
          <xs:attribute name="uiculture" type="xs:string" use="required" />
          <xs:attribute name="os-architecture" type="xs:string" use="required" />
        </xs:complexType>
      </xs:element>
      <!-- NUnit.Framework.Api.FrameworkController.InsertSettingsElement -->
      <xs:element name="settings" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <!-- NUnit.Framework.Api.FrameworkController.AddSetting -->
            <xs:element name="setting" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <!-- NUnit.Framework.Api.FrameworkController.AddDictionaryEntries -->
                  <xs:element name="item" minOccurs="0" maxOccurs ="unbounded">
                    <xs:complexType>
                      <xs:attribute name="key" type="xs:string" use="required" />
                      <xs:attribute name="value" type="xs:string" use="required" />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="name" type="xs:string" use="required" />
                <xs:attribute name="value" type="xs:string" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:group ref="TestBaseElementGroup" />
      <xs:group ref="ContainedTestGroup" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attributeGroup ref="TestSuiteAttributeGroup" />
  </xs:complexType>
  <xs:attributeGroup name="TestSuiteAttributeGroup">
    <xs:attributeGroup ref="TestBaseAttributeGroup" />
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <!-- Implementations of NUnit.Framework.Internal.Test.TestType -->
        <xs:restriction base="xs:string">
          <!-- NUnit.Framework.Internal.ParameterizedFixtureSuite.TestType -->
          <xs:enumeration value="GenericFixture" />
          <xs:enumeration value="ParameterizedFixture" />
          <!-- NUnit.Framework.Internal.ParameterizedMethodSuite.TestType -->
          <xs:enumeration value="Theory" />
          <xs:enumeration value="GenericMethod" />
          <xs:enumeration value="ParameterizedMethod" />
          <!-- NUnit.Framework.Internal.TestAssembly.TestType -->
          <xs:enumeration value="Assembly" />
          <!-- NUnit.Framework.Internal.Test.TestType -->
          <xs:enumeration value="SetUpFixture" />
          <xs:enumeration value="TestFixture" />
          <xs:enumeration value="TestMethod" />
          <xs:enumeration value="TestSuite" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="testcasecount" type="NonnegativeInt32" use="required" />
  </xs:attributeGroup>

  <xs:group name="ContainedTestGroup">
    <xs:choice>
      <xs:element name="test-suite" type="TestSuiteElementType" />
      <xs:element name="test-case" type="TestCaseElementType" />
    </xs:choice>
  </xs:group>

  <xs:simpleType name="NonnegativeInt32">
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>

</xs:schema>